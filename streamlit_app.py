import re
import requests
from datetime import datetime
import lxml

from bs4 import BeautifulSoup
import pandas as pd
import streamlit as st

from sravni import sravni_excel

current_datetime = datetime.now().strftime('%Y-%m-%d')

st.markdown('<h2>–†–µ–π—Ç–∏–Ω–≥ –ú–§–û –Ω–∞ —Å–∞–π—Ç–∞—Ö Banki.ru –∏ Sravni.ru</h2>', unsafe_allow_html=True)
my_bar = st.progress(0)
progress_text = "–ö–æ–ª–ª–µ–≥–∞, –≤–æ–∑–º–æ–∂–Ω–æ —Ç–µ–±–µ –ø–æ–∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Å–∞–π—Ç –¥–æ–ª–≥–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–æ–∂–¥–∏! üòâ"
if st.button('Banki.ru'):
    my_bar = st.progress(0, text=progress_text)



    def extract_digits(s): # –§—É–Ω–∫—Ü–∏—è, —É–±–∏—Ä–∞–µ—Ç –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤—Å–µ –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ —Ç–æ—á–∫–∏
        return re.sub(r'[^\d.]', '', s)

    # –ü–µ—Ä–µ—á–∏—Å–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –∏ —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
    companies = ['ekapusta', 'moneyman', 'zaymer', 'webbankir', 'carmoney', 'bistrodengi', 'lime_zaim', 'kvatro', 'boostra', 'revotekhnologii', 'medium_score', 'zaymigo', 'dengi_srazu', 'cashdrive', 'turbozajm', 'joymoney', 'privsosed', 'centrofinans', 'oneclickmoney', 'migkredit', 'maxcredit', 'cash_u', 'sammit', 'pliskov', 'bystrozaym', 'moneza', 'umnye_nalichnye', 'smsfinance', 'creditter', 'svoi_ludi', 'otlichnye_nalichnye', 'budgett', 'krediska', 'paylate', 'kangaria', 'payps', 'microdengi', '495credit', 'kredito24', 'ezaem', 'konga', 'mobicredit', 'belkacredit', 'beriberu', 'strana_express', 'denga', 'fastmoney', 'vivus', 'caranga', 'otp_finance', 'celfin', 'grinmani', 'dengi_na_dom', 'micro_klad', 'zaimy_rf', 'creditstar', 'chestnoye_slovo', 'alizaim', 'rosdengi', 'uralsibfinance', 'knopkadengi', 'erck', 'vsegdazaem', 'finterra', 'finmoll', 'vivadengi', 'creditplus', 'webzaim', 'zaim_express', 'kupi_ne_kopi', 'air_loanse', 'a_dengi', 'fin5', 'srochno_dengi', 'do_zarplati', 'ykky', 'moneyfaktura', 'daem_zaem', 'credit_smile', 'ren_express', 'express_dengi', 'buro_zaimov', 'sovazaem', 'platiza', 'express_zaimy', 'fast-finance', 'galiciya']
    url = 'https://www.banki.ru/microloans/responses/companies/'

    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    table_names = {'company_name':[],'main_rait':[],'position':[],'review':[],'answer':[],'positive_reviews':[],'negative_reviews':[],'fast_issuance':[],'good_employee':[],'transparent_conditions':[],'convenience_application':[],'date':[]}

    n = 1
    # –°–æ–∑–¥–∞–µ–º —Ü–∏–∫–ª –¥–ª—è –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏ —è–≤—Å–µ—Ö –∫–æ–º–ø–∞–Ω–∏–π
    for i in companies:
        try:
            print(f'{n} / {len(companies)}')
            data = requests.get(f'{url}{i}')
            site = data.text
            site = BeautifulSoup(site,'lxml')
        except:
            pass
        
        
        # –≤—ã–≥—Ä—É–∂–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
        try:
            company_name = site.find(class_ = 'CompanyHeadstyled__TextHeaderInnerStyled-sc-1co238g-4')
            table_names['company_name'].append(company_name.text.replace('–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –ú–§–û ',''))
        except:
            table_names['company_name'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥
        try:
            main_rait = site.find(class_ = 'Text__sc-vycpdy-0 bNfHJq RatingsBadgestyled__StyledBadgeTitle-sc-13iioj7-1 dyVhnJ')
            table_names['main_rait'].append(float(main_rait.text))
        except:
            table_names['main_rait'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –ú–µ—Å—Ç–æ
        try:
            position = site.find_all(class_ = 'Text__sc-vycpdy-0 jZylFz')
            table_names['position'].append(int(extract_digits(position[0].text)))
        except:
            table_names['position'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –û—Ç–∑—ã–≤—ã
        try:
            review = site.find_all(class_ = 'Text__sc-vycpdy-0 jZylFz')
            table_names['review'].append(int(extract_digits(review[1].text)))
        except:
            table_names['review'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –û—Ç–≤–µ—Ç—ã
        try:
            answer = site.find_all(class_ = 'Text__sc-vycpdy-0 jZylFz')
            table_names['answer'].append(int(extract_digits(answer[2].text)))
        except:
            table_names['answer'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
        try:
            positive_reviews = site.find_all(class_ = 'Text__sc-vycpdy-0 gMyhnj')
            table_names['positive_reviews'].append(float(extract_digits(positive_reviews[0].text)))
        except:
            table_names['positive_reviews'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
        try:
            negative_reviews = site.find_all(class_ = 'Text__sc-vycpdy-0 eVmhAG')
            table_names['negative_reviews'].append(float(extract_digits(negative_reviews[0].text)))
        except:
            table_names['negative_reviews'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –ë—ã—Å—Ç—Ä–∞—è –≤—ã–¥–∞—á–∞
        try:
            fast_issuance = site.find_all(class_ = 'Text__sc-vycpdy-0 ceYcWs')
            table_names['fast_issuance'].append(float(extract_digits(fast_issuance[0].text)))
        except:
            table_names['fast_issuance'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –í–µ–∂–ª–∏–≤—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
        try:
            good_employee = site.find_all(class_ = 'Text__sc-vycpdy-0 ceYcWs')
            table_names['good_employee'].append(float(extract_digits(good_employee[1].text)))
        except:
            table_names['good_employee'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
        try:
            transparent_conditions = site.find_all(class_ = 'Text__sc-vycpdy-0 ceYcWs')
            table_names['transparent_conditions'].append(float(extract_digits(transparent_conditions[2].text)))
        except:
            table_names['transparent_conditions'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        # –£–¥–æ–±—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Å–∞–π—Ç–∞
        try:
            convenience_application = site.find_all(class_ = 'Text__sc-vycpdy-0 ceYcWs')
            table_names['convenience_application'].append(float(extract_digits(convenience_application[3].text)))
        except:
            table_names['convenience_application'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")

        try:
            convenience_application = site.find_all(class_ = 'TextResponsive__sc-hroye5-0 bILYor')
            table_names['date'].append(datetime.now())
        except:
            table_names['date'].append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")

        my_bar.progress(n, text=progress_text)

        n = n+1

    df = pd.DataFrame(table_names)


    df.to_excel(f'banki_ru.xlsx')



    #df.to_excel(f'banki_ru_{current_datetime}.xlsx')

    my_bar.empty()

    st.dataframe(df)
    with open("banki_ru.xlsx", "rb") as file:
                    btn = st.download_button(
                        label="Download excel banki.ru",
                        data=file,
                        file_name="banki_ru.xlsx"
                    )

if st.button('Sravni.ru'):
    df2 = sravni_excel()
    st.dataframe(df2)
    with open("sravni_ru.xlsx", "rb") as file:
                    btn2 = st.download_button(
                        label="Download excel sravni.ru",
                        data=file,
                        file_name="sravni_ru.xlsx"
                    )
